{"version":3,"sources":["webpack://Shaky Snails/./src/components/latest.jsx","webpack://Shaky Snails/./src/components/archive.jsx","webpack://Shaky Snails/./src/components/categories.jsx","webpack://Shaky Snails/./src/pages/index.jsx"],"names":["Latest","data","useStaticQuery","Posts","allMdx","edges","className","map","node","key","id","frontmatter","date","Link","to","slug","title","tags","Archive","months","group","slice","reverse","m","index","month_count","fieldValue","totalCount","Categories","t","tag","kebabCase"],"mappings":"+MAIe,SAASA,IACtB,IAAMC,GAAOC,oBAAe,aAqBtBC,EAAQF,EAAKG,OAAOC,MAC1B,OACE,gCACE,sBAAIC,UAAU,wBAAd,UACA,2BACCH,EAAMI,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,uBAAKC,IAAKD,EAAKE,GAAIJ,UAAU,WAC3B,uBAAKA,UAAU,UAAUE,EAAKG,YAAYC,MAC1C,sBAAIN,UAAU,8BACZ,gBAAC,EAAAO,KAAD,CAAMC,GAVF,eAUiBN,EAAKO,MAAOP,EAAKG,YAAYK,QAEpD,uBAAKV,UAAU,iCACb,gBAAC,IAAD,CAAKW,KAAMT,EAAKG,YAAYM,aCnCzB,SAASC,IACtB,IAUMC,GAVOjB,oBAAe,cAURE,OAAOgB,MAAMC,QAAQC,UACzC,OACE,gCACE,sBAAIhB,UAAU,6BAAd,WACA,2BACCa,EAAOZ,KAAI,SAACgB,EAAGC,GACd,IAAMC,EACDF,EAAEG,WAAL,IAA6BH,EAAEI,WAA/B,IACF,OACE,sBAAIlB,IAAKe,EAAOlB,UAAU,qBACxB,sBAAIA,UAAU,IACZ,gBAAC,EAAAO,KAAD,CAAMC,GAAE,sBAAwBS,EAAEG,WAA1B,KACLD,S,wBCrBF,SAASG,IACtB,IAAM3B,GAAOC,oBAAe,aAU5B,OACE,gCACE,sBAAII,UAAU,6BAAd,QACA,2BACCL,EAAKG,OAAOgB,MAAMb,KAAI,SAACsB,EAAGL,GACzB,IAAMM,EAASD,EAAEH,WAAL,IAA6BG,EAAEF,WAA/B,IACZ,OACE,sBAAIlB,IAAKe,EAAOlB,UAAU,qBACxB,sBAAIA,UAAU,IACZ,gBAAC,EAAAO,KAAD,CAAMC,GAAE,SAAWiB,IAAUF,EAAEH,YAAvB,KAAwCI,S,eClB9D,aAAe,OACb,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKd,MAAM,SACX,gBAAChB,EAAD,MACA,gBAAC4B,EAAD,MACA,gBAACV,EAAD","file":"component---src-pages-index-jsx-488bcb25ade5746e75f1.js","sourcesContent":["import React from 'react'\r\nimport { useStaticQuery, graphql, Link } from 'gatsby'\r\nimport Tag from './tags'\r\n\r\nexport default function Latest() {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx(sort: { fields: [frontmatter___date], order: DESC }, limit: 5) {\r\n        totalCount\r\n        edges {\r\n          node {\r\n            id\r\n            slug\r\n            excerpt\r\n            frontmatter {\r\n              title\r\n              date(formatString: \"YYYY-MM-DD\")\r\n              tags\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  // const rootPath = `${__PATH_PREFIX__}/`\r\n  const rootPath = `/shakysnails`\r\n  const Posts = data.allMdx.edges\r\n  return (\r\n    <>\r\n      <h2 className=\"text-lg text-dclCyan\">Latest</h2>\r\n      <hr />\r\n      {Posts.map(({ node }) => (\r\n        <div key={node.id} className=\"text-lg\">\r\n          <div className=\"inline\">{node.frontmatter.date}</div>\r\n          <h3 className=\"inline ml-2 text-dclYellow\">\r\n            <Link to={rootPath + node.slug}>{node.frontmatter.title}</Link>\r\n          </h3>\r\n          <div className=\"inline ml-2 whitespace-nowrap\">\r\n            <Tag tags={node.frontmatter.tags} />\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql, Link } from 'gatsby'\r\n\r\nexport default function Archive() {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx {\r\n        group(field: fields___year_month) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  const months = data.allMdx.group.slice().reverse() // 非破壊的に反転\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-4 text-lg text-dclCyan\">Archive</h2>\r\n      <hr />\r\n      {months.map((m, index) => {\r\n        const month_count =\r\n          `${m.fieldValue}` + `(` + `${m.totalCount}` + `)`\r\n        return (\r\n          <ul key={index} className=\"list-none text-lg\">\r\n            <li className=\"\">\r\n              <Link to={`/archive/posted-in-${m.fieldValue}/`}>\r\n                {month_count}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, useStaticQuery, graphql } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\n\r\nexport default function Categories() {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      allMdx(limit: 1000) {\r\n        group(field: frontmatter___tags) {\r\n          fieldValue\r\n          totalCount\r\n        }\r\n      }\r\n    }\r\n  `)\r\n  return (\r\n    <>\r\n      <h2 className=\"mt-4 text-lg text-dclCyan\">Tags</h2>\r\n      <hr />\r\n      {data.allMdx.group.map((t, index) => {\r\n        const tag = `${t.fieldValue}` + `(` + `${t.totalCount}` + `)`\r\n        return (\r\n          <ul key={index} className=\"list-none text-lg\">\r\n            <li className=\"\">\r\n              <Link to={`/tags/${kebabCase(t.fieldValue)}/`}>{tag}</Link>\r\n            </li>\r\n          </ul>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nCategories.propTypes = {\r\n  className: PropTypes.string,\r\n}","import * as React from 'react'\r\nimport Layout from '../components/layout'\r\nimport Latest from '../components/latest'\r\nimport Archive from '../components/archive'\r\nimport Categories from '../components/categories'\r\nimport SEO from '../components/seo'\r\n\r\nexport default () => (\r\n  <Layout>\r\n    <SEO title='Home' />\r\n    <Latest />\r\n    <Categories />\r\n    <Archive />\r\n  </Layout>\r\n)\r\n"],"sourceRoot":""}